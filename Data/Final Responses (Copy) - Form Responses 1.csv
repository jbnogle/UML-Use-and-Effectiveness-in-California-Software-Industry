Timestamp,Gender,Age,WorkExperience,Education,KnowUML,UMLDef,UsedUML,CostEffectiveness,CECode,WorkUS,WorkCali,Domain,Organization,OrgSize,Roles,ProjectNum,ProjSizePeople[< 5  Members],ProjSizePeople[5 - 10],ProjSizePeople[11 - 25],ProjSizePeople[26 - 50],ProjSizePeople[51 - 100],ProjSizePeople[101 - 500],ProjSizePeople[500 +  Members],"ProjSizeCode[<  1,000 LOC]","ProjSizeCode[1,000 - 10,000 LOC]","ProjSizeCode[10,001 - 100,000 LOC]","ProjSizeCode[100,001 - 2,000,000 LOC]","ProjSizeCode[2,000,000+ LOC]",UMLUse,UMLActivities,ActivitiesCode,Structural[Class Diagram],Structural[Package Diagram],Structural[Object Diagram],Structural[Component Diagram],Structural[Composite Structure Diagram],Structural[Deployment Diagram],Behavioral[Activity Diagram],Behavioral[Sequence Diagram],Behavioral[Use Case Diagram],Behavioral[State Diagram],Behavioral[Communication Diagram],Behavioral[Interaction Overview Diagram],Behavioral[Timing Diagram],OpCoding,OpProductivity,OpQuality,OpCommunication,OpDrawbacks,DrawbacksCode,OpBenefits,BenefitsCode,ShouldWeEducate,EduSuggestions,EduCode,OpenComments1,Email,ReceiveResults,OpenComments2,ColleagueSuggest,OpenCommentsDisq,ColleagueSuggestDisq
5/1/2018 12:03:16,Male,50 - 59,10+ years,Bachelor's Degree,Yes,"It is a way of diagraming a system of objects and their interactions with various interfaces, procedures, etc.  ",Yes,"It depends on the complexity of the piece of software you are working on.  You can get unnecessarily carried away with it, but it is very good at showing the overall picture of what your and your team is trying to accomplish.  It is definitely worth using when designing a new enhancement to existing software.",1 - Good for mapping out overall picture/relationships and the effects a new change will have on the system before implementation,Yes,Yes,"Commercial Software, Aerospace/Defense",Dassault Systemes - R&D,1001 - 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Build Manager (aka - Build Specialist), Software Architect (aka - Software Modeler), Testing/QA, Technical Support (aka - Operations Analyst, Problem Manager), Database Architect (aka - Database Administrator)",10 +,More than 10 Times,3 - 10 Times,Once or Twice,Never,Never,Never,Never,More than 10 Times,More than 10 Times,3 - 10 Times,Once or Twice,Never,< 10% of projects,Mostly for describing object aggregation and relationships.,1 - Modeling,Rarely,Never,Sometimes,Rarely,Sometimes,Never,Never,Sometimes,Never,Rarely,Rarely,Sometimes,Never,1,3,3,4,Wasted time diagramming simple things.,9 - Time Waster,"Visualization of the system, it's objects, and the interactions with the user or database source for input and output.  ",6 - Visualization,Yes,An actual use case is the best way to teach using it.  I found that it is helpful with database design especially.,"1 - Hands On Utilization of UML, 2 - Teach in Database Design",This takes longer than 8 to 10 minutes.  I'd say about 20 minutes.,rg.curry@gmail.com,Yes,,,,
5/8/2018 13:56:38,Male,25 - 29,3 - 5 years,Bachelor's Degree,Yes,Generic graphical modeling for data model relationships,Yes,Always a benefit to mapping out software relationships by hand or w/ graphical software before starting a project.,1 - Good for mapping out overall picture/relationships and the effects a new change will have on the system before implementation,Yes,Yes,IOT,,10 - 100,"Software Architect (aka - Software Modeler), Project Manager (aka - Project Leader)",3 - 10,3 - 10 Times,Never,Never,Never,Never,Never,Never,Once or Twice,3 - 10 Times,Once or Twice,Never,Never,51 - 90% of projects,"DB Modeling, Architecture Modeling, File Structure Modeling",1 - Modeling,Often,Never,Often,Never,Never,Often,Often,Often,Rarely,Often,Sometimes,Rarely,Rarely,3,3,4,4,Takes time,1 - High Cost,"Find issues early, consider edge cases and potential flaws early. ",7 - Find Problems Easier,Yes,,,,,Yes,,,,
5/8/2018 14:00:23,Male,30 - 34,7 - 10 years,Bachelor's Degree,Yes,fancy block diagrams,Yes,"I need to qualify here that we use block diagrams but not necessarily UML as defined by any set of rules. I would say block diagrams are quite useful, but using actual UML is not something we do.",2 - Only good if used informally,Yes,Yes,"Commercial Software, Transportation, Technology",,> 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer)",3 - 10,3 - 10 Times,Never,Never,Never,Never,Never,Never,Once or Twice,Never,3 - 10 Times,Never,Never,10 - 50% of projects,explaining a system design to other engineers,2 - Communication,Usually,Never,Sometimes,Never,Never,Never,Never,Never,Never,Often,Never,Never,Never,2,4,4,5,rules to follow,8 - Strict Rules,simpler than explaining in words,2 - Better Communication,Yes,don't get caught up in rules about how to draw stuff. just learn how to explain relationships through drawing in addition to writing.,3 - Don't Get Caught Up in Strict Rules,"question about number of engineers in the organization should be optional, it's not something I can share",,Yes,,,,
5/8/2018 19:54:32,Male,60 +,10+ years,Master's Degree,Yes,A language for representing software designs pictorially.,Yes,High if used informally. Low if used rigorously.,2 - Only good if used informally,Yes,Yes,"Commercial Software, Technology, Open Source Development",Google,> 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Software Architect (aka - Software Modeler), Database Architect (aka - Database Administrator)",3 - 10,Once or Twice,Once or Twice,Once or Twice,Never,Never,Never,Never,Never,Once or Twice,Once or Twice,Never,Never,10 - 50% of projects,Documentation of software design,3 - Documentation,Sometimes,Never,Sometimes,Never,Never,Never,Never,Often,Never,Sometimes,Never,Never,Never,0,2,1,2,UML manages to be overly complex and insufficiently expressive at the same time. Producing pictures is time-consuming even with (especially with?) purpose-built tools.,"6 - Too Complex, 11 - Insufficient","It is useful to have a common notation for basic diagrams, particularly sequence diagrams. Sequence diagrams are also the diagrams with the best tools (e.g. websequencediagrams.com) because they lend themselves to textual expression. Object diagrams are more useful than the more-popular class diagrams. State machines are useful.",8 - Common Notation,Yes,Emphasize documentation of general design ideas and patterns rather than rigorous models that try to express detailed behaviors.,3 - Don't Get Caught Up in Strict Rules,"UML is not broadly used in any environment I have worked in. I have rarely had anyone present me a UML diagram unprompted, although it has happened. I will sometimes make people do them when I feel that they would be helpful in reducing communication struggles, but I do not insist on them routinely.",martin.nally@gmail.com,Yes,It would be interesting to understand what you hope to learn from this research and what motivated you to undertake it.,,,
5/8/2018 22:38:39,Male,30 - 34,10+ years,Master's Degree,Yes,a standardized way of diagraming software,Yes,useful for discussions with colleagues on a whiteboard but not using it formally,2 - Only good if used informally,Yes,Yes,"Commercial Software, Technology, Services",,10 - 100,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Technical Consultant (aka - IT Consultant, Application Specialist), Software Architect (aka - Software Modeler)",3 - 10,More than 10 Times,Once or Twice,Never,Never,Never,Never,Never,More than 10 Times,More than 10 Times,3 - 10 Times,Once or Twice,Never,< 10% of projects,internal discussions on a whiteboard,2 - Communication,Often,Never,Sometimes,Rarely,Rarely,Usually,Sometimes,Sometimes,Sometimes,Never,Never,Never,Rarely,2,2,,,Too formal to be used for all pieces of software,10 - Too Formal,a common language to use between developers and architects,8 - Common Notation,Yes,"You'll need a common language to speak with other developers, you might not use it commonly, but this is it",4 - Emphasize UML is a Common Language,UML is more applicable to some programming languages (OO) than others,whitestpdropper9@hotmail.com,Yes,"haven't seen UML be a focus in some time, interested to hear the results",,,
5/9/2018 0:00:06,Male,30 - 34,10+ years,Master's Degree,Yes,"The concepts, rules, and consistency (unified) to illustrate a diagram (model)",Yes,"It's overall good but not everyone knows about it including product managers and executives. The education I got was useful in helping me illustrate my diagrams including flow and sequence diagrams. However, it's not as effective to  have a book next to me and follow it to the period.","3 - Not everyone is familiar with the UML standard, 2 - Only good if used informally",Yes,Yes,"Commercial Software, Retail, Banking/Finance, Technology, Services",PayPal,> 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Software Architect (aka - Software Modeler), Project Manager (aka - Project Leader), Product Owner (aka - Product Specialist), Testing/QA, Technical Support (aka - Operations Analyst, Problem Manager), Network Engineer (aka - Network Designer, Network Administrator), Database Architect (aka - Database Administrator), Security Analyst (aka - Security Engineer), The Product Owner (PO) owns the requirements. The Programmer (or Software Engineer) owns the  builds, testing, etc.",10 +,3 - 10 Times,More than 10 Times,More than 10 Times,3 - 10 Times,Once or Twice,Never,Never,More than 10 Times,More than 10 Times,Once or Twice,Never,Never,10 - 50% of projects,Understanding requirements and the dependencies to various organizations at the company.,4 - Understanding Requirements,Rarely,Never,Never,Never,Never,Never,Rarely,Always,Never,Sometimes,Never,Rarely,Never,4,4,4,4,The memorization and the expectations that everyone knows it.,2 - Not Universal,Learning ways of communicating to various stakeholders.,2 - Better Communication,Yes,Work on a multidisciplinary project or work on a real life project.,"1 - Hands On Utilization of UML, 5 - Interdisciplinary Projects","""Project"" is a vague word and needs to be better defined since we work on various user stories leading up to an epic or up to an L2 or an L1. So when you said ""Project"", I think of an overall epic.",j.vu@live.com,Yes,"Think I made my comments earlier about the definition of ""project.""",I'll forward it myself ... don't need to spam my friends. :),,
5/9/2018 2:39:04,Male,30 - 34,7 - 10 years,Bachelor's Degree,Yes,Universal Modeling Language - a standard way to model systems or data in software,Yes,"Used more in terms of whiteboarding. As such, it was free! Thus quite cost effective.",2 - Only good if used informally,Yes,Yes,Commercial Software,Workday,> 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Technical Consultant (aka - IT Consultant, Application Specialist), Build Manager (aka - Build Specialist), Software Architect (aka - Software Modeler), Project Manager (aka - Project Leader), Product Owner (aka - Product Specialist), Testing/QA, Technical Support (aka - Operations Analyst, Problem Manager), Network Engineer (aka - Network Designer, Network Administrator), Security Analyst (aka - Security Engineer)",3 - 10,3 - 10 Times,3 - 10 Times,Once or Twice,Never,Never,Never,Never,Never,Never,Never,Never,Never,51 - 90% of projects,Whiteboarding design. Sometimes Gliphy design.,5 - Design,Often,Never,Never,Usually,Never,Sometimes,Sometimes,Sometimes,Rarely,Never,Never,Often,Never,4,2,2,4,"Being overly dogmatic on style can be slow, not everyone understands intent immediately",8 - Strict Rules,Visual and clear way to communicate architectures or data flows,2 - Better Communication,Yes,,,"It's worth noting that our use of ""UML"" isn't perfectly by-the-book. More commonly, we will diagram with loose adherence to standards, enough to get our point across. For the purposes of this survey, this was considered UML diagramming (even though a university professor might consider it imperfect!). ",tysiva@gmail.com,No,,,,
5/9/2018 11:51:54,Male,18 - 24,1 - 3 years,Associate Degree,Yes,"UML is a language that seeks to manipulate large projects in a manner that falls in line with business or software requirements specification established by key stakeholders. UML utilizes various components that allows for manipulating key aspects in SDLC such as development (classes, inheritance, objects interactions) or how components of software may interact with one another, how components may be deployed etc. UML seeks to establish a medium between business requirements and software scrum objectives. ",Yes,My team and I have incorporated UML in an academic setting and certain diagrams are useful such as establishing architecture but others not so much i.e deployment. This is especially in the case as our software wont be hitting market. ,"4 - Good for certain phases of software development, but not others",Yes,Yes,"Education, Technology, Open Source Development","Cal Poly, eBay (summer 2018) ",1001 - 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Software Architect (aka - Software Modeler), Security Analyst (aka - Security Engineer)",1 - 2,Once or Twice,Once or Twice,Never,Never,Never,Never,Never,Once or Twice,Once or Twice,Never,Never,Never,< 10% of projects,"Architecture, Classes/Components, Deployment (web app)",1 - Modeling,Rarely,Never,Never,Rarely,Never,Rarely,Rarely,Never,Rarely,Rarely,Never,Never,Never,1,2,3,2,Sometime aspects arent clearly defined and there seems to be an overlap in terminology which can be confusing. Several diagrams wont apply in many cases as it doesnt fit in the constraints of the language or software type (i.e didn't use UML class diagrams as much in asynchronous web development) ,2 - Not Universal,"Outline overall architecture,
Large projects and how components interact,
How a large project should be properly be deployed and what is necessary for it, 
OOP design for classes objects and their interactions",5 - Explain Complexities,Yes,"Apply it to a real project a team develops, find real world UML patterns in live software or previous iterations of live software from reputable companies. ","1 - Hands On Utilization of UML, 5 - Interdisciplinary Projects","They way I learned UML was by applying it on a project my team and I were developing but we felt a bit frustrated as many of the diagrams didn't seem to be too applicable with our project due to the nature of it being a web app (timing, class etc.). We also felt as if it was a bit tedious and were unsure of how well used it is in an industry standard. But we agree that UML has the potential to be very effective in larger teams and huge complex projects. ",abineetsingh@gmail.com,Yes,Will be interesting to see how we apply UML in SDLC during my Senior SE capstone. I am currently in Dr. Da Silva's course. ,"82.matthew.jimenez@gmail.com
gmacias@calpoly.edu
skylerceronio@gmail.com",,
5/9/2018 13:19:04,Male,18 - 24,1 - 3 years,High School Diploma,Yes,Universal modeling language used to detail certain attributes about a computer system,Yes,Generally very effective to quickly inform/train developers on how a certain aspect of the system works and how it all functions together,1 - Good for mapping out overall picture/relationships and the effects a new change will have on the system before implementation,Yes,Yes,Commercial Software,,< 10,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Project Manager (aka - Project Leader)",3 - 10,3 - 10 Times,Never,Never,Never,Never,Never,Never,Once or Twice,3 - 10 Times,Once or Twice,Never,Never,10 - 50% of projects,Requirements Collecting ,4 - Understanding Requirements,Often,Never,Never,Rarely,Rarely,Never,Sometimes,Never,Sometimes,Sometimes,Never,Never,Never,4,5,4,5,Initial time investment ,1 - High Cost,Ease of communication between developers,2 - Better Communication,Yes,,,,mattyarmo@gmail.com,Yes,,,,
5/12/2018 14:56:01,Male,25 - 29,7 - 10 years,Bachelor's Degree,Yes,"A way of modeling classes, their properties, and relationships with other classes",Yes,UML diagrams are very useful in design documents for features. The inclusion of them in a document helps visualize the changes/effects the feature will have on a system. ,1 - Good for mapping out overall picture/relationships and the effects a new change will have on the system before implementation,Yes,Yes,Technology,VMware,> 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Software Architect (aka - Software Modeler)",1 - 2,Once or Twice,Never,Never,Never,Never,Never,Never,Never,Never,Once or Twice,Never,Never,51 - 90% of projects,Design documents,3 - Documentation,Usually,Never,Never,Never,Never,Never,Never,Usually,Never,Never,Never,Never,Never,4,4,3,3,"I really don't see any, other than having to take the time. However, a design document may be too confusing or hard to grasp without some form of UML diagram in it. ",1 - High Cost,Design issues can be caught up front and not after the code has been written/reviewed.,7 - Find Problems Easier,Yes,Show real work examples of how UML diagrams can catch errors before they become a major problem/require code rework. The design could have caught it upfront.,6 - Emphasize the Benefits in Early Design,,jonathan@inloes.net,Yes,I like UML and think it is very useful. ,,,
5/16/2018 21:21:14,Male,30 - 34,10+ years,Bachelor's Degree,Yes,A standardized way for software teams to describe their products in diagrams,Yes,Medium / high,6 - It is effective,Yes,Yes,"Commercial Software, Technology, Services",Atlassian,1001 - 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Technical Consultant (aka - IT Consultant, Application Specialist), Build Manager (aka - Build Specialist), Software Architect (aka - Software Modeler), Project Manager (aka - Project Leader), Product Owner (aka - Product Specialist), Testing/QA, Systems Analyst (aka - Solutions Specialist, Technical Designer), Technical Support (aka - Operations Analyst, Problem Manager), Network Engineer (aka - Network Designer, Network Administrator), Security Analyst (aka - Security Engineer)",10 +,3 - 10 Times,3 - 10 Times,3 - 10 Times,Once or Twice,Once or Twice,Never,Never,Once or Twice,3 - 10 Times,3 - 10 Times,Once or Twice,Never,10 - 50% of projects,Specifications,4 - Understanding Requirements,Sometimes,Rarely,Never,Never,Never,Rarely,Rarely,Sometimes,Rarely,Sometimes,Never,Never,Never,2,3,3,4,These days many engineers go through coding bootvamps and don't have the formal education which includes UML training,2 - Not Universal,It is a common language which all educated software engineers should understand,8 - Common Notation,Yes,,,"I'm definitely an advocate for diagrams to depict technical designs etc, however at my company we often use less formal diagrams in favor of the somewhat rigid UML specifications. In my opinion UML is a communications tool, but not the only tool.",bwoskow@gmail.com,Yes,,,,
5/22/2018 7:29:12,Female,25 - 29,Less than 1 year,Bachelor's Degree,Yes,Universal diagram language of a software design that all software engineers can understand the structure of the software once they see it,Yes,"Very effective. Sometimes our own teams get in heated discussions because of English language but UML clears it effectively. We also work with international teams and while their English is good, UML makes it easier to understand their design and thought process.",9 - Good for communication across different disciplines/languages,Yes,Yes,Semiconductor,"Brooks Automation, Inc",1001 - 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer), Software Architect (aka - Software Modeler), Project Manager (aka - Project Leader), Product Owner (aka - Product Specialist), Testing/QA, Network Engineer (aka - Network Designer, Network Administrator), Database Architect (aka - Database Administrator)",3 - 10,3 - 10 Times,Never,Never,Never,Never,Never,Never,Never,Never,Once or Twice,3 - 10 Times,Once or Twice,91 - 100%  of projects,"Design document
Design reviews
During any discussions on software structure","5 - Design, 3 - Documentation
",Always,Usually,Sometimes,Sometimes,Sometimes,Sometimes,Rarely,Always,Always,Always,Rarely,Never,Sometimes,4,5,5,5,"You sometimes get stuck in rounds and rounds of design reviews, which takes time away from actual development.",1 - High Cost,Anyone who knows UML can easily comprehend software structure without any miscommunications in a glance,2 - Better Communication,Yes,"UML helps understanding OO design concepts and design patterns. The more exposure and experience in designing using UML, the better you get. Perhaps more designing exercise to existing software.",1 - Hands On Utilization of UML,,helen.hwang@brooks.com,Yes,,helen.hwang@brooks.com,,
5/30/2018 11:48:57,Male,18 - 24,Less than 1 year,Bachelor's Degree,Yes,Diagrams that help explain how different components of a system are related to each other,Yes,"It depends on the size of the project. For smaller projects, not very useful. For bigger projects very useful",11 - Only good for large projects,Yes,Yes,"Technology, Services","Keysight technologies, Apple",> 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer)",1 - 2,Once or Twice,Once or Twice,Never,Never,Never,Never,Never,Never,Once or Twice,Once or Twice,Never,Never,10 - 50% of projects,To help explain my system to other people so that I could get advice,2 - Communication,Always,Never,Never,Always,Never,Never,Never,Never,Never,Sometimes,Never,Sometimes,Never,2,2,1,3,It often has to change as the software evolves,7 - Maintenance,Communication between team memebers about the structure of a project ,2 - Better Communication,Yes,Requiring them on certain projects in classes,1 - Hands On Utilization of UML,I don’t like them. But I seee how they can be useful,macdude95@me.com,No,No,cdushana@gmail.com,,
5/30/2018 13:50:52,Male,18 - 24,3 - 5 years,Bachelor's Degree,Yes,UML is a set of industry standard methodologies for pictorially explaining software design.,Yes,"Based on my experience, UML is a great way to convey your design to another developer. I used a class UML diagram to explain my system architecture to a group of developers over the summer. The diagram was subsequently used as documentation to onboard members onto my project.",9 - Good for communication across different disciplines/languages,Yes,Yes,Technology,My last internship was a Johnson Controls where I worked in an innovation garage that produced cutting edge solutions in robots and AI.,1001 - 5000,"Programmer (aka - Developer, Software Engineer, Systems Engineer)",1 - 2,Once or Twice,Never,Never,Never,Never,Never,Never,Never,Once or Twice,Never,Never,Never,51 - 90% of projects,Presentation tools. Documentation. Design Justification.,"5 - Design, 8 - Presenting, 3 - Documentation",Always,Never,Never,Never,Never,Never,Usually,Never,Never,Usually,Never,Never,Never,0,1,2,5,Updating the diagrams to remain current as the system evolves. Working with an old UML diagram may cause more confusion because the developer now has to figure out how the UML diagram is different than the actual system.,7 - Maintenance,A fast way to convey a high level description of how your system works.,"2 - Better Communication, 5 - Explain Complexities",Yes,"Honestly, just require students to do more of them. I know people who have never created their own UML diagram. Every academic project should require the student to create at least a class UML diagram (for OOP).",1 - Hands On Utilization of UML,no comments:),elabouve@comcast.net,Yes,There are so many UML diagrams that can be used. It is hard to know which diagram students should learn.,,,